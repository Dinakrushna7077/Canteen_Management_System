@using Canteen_Management_System.Models
@model Admin_Mst
@{
    ViewBag.Title = "ChangePassword";
}

<link href="//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<style>
    
</style>
<div id="successMessage">@TempData["successMessage"]</div>
<div id="warningMessage">@TempData["warningMessage"]</div>
<div class="container p-2">
    <div class="row justify-content-center">
        <div class="col-md-6 pass-form p-md-4 p-lg-6">

            @using(Html.BeginForm("ChangePassword","Admin",FormMethod.Post))
            { 
                @Html.AntiForgeryToken()
                @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control form-control-lg mb-3", @placeholder = "Current Password", @id = "currentpass", @type = "password" } })
                @Html.EditorFor(x => x.NewPassword, new { htmlAttributes = new { @class = "form-control form-control-lg mb-3", @placeholder = "New Password", @id = "password1", @type = "password" } })
                @*<input type="password" class="form-control form-control-lg mb-3" name="currentPass" id="currentpass" placeholder="Current Password" autocomplete="off">
        <input type="password" class="form-control form-control-lg mb-3" name="password1" id="password1" placeholder="New Password" autocomplete="off">*@
                <div class="row">
                    <div class="col-6">
                        <i id="8char" class="bi bi-x-circle text-danger"></i> 8 Characters Long<br>
                        <i id="ucase" class="bi bi-x-circle text-danger"></i> One Uppercase Letter
                    </div>
                    <div class="col-6">
                        <i id="lcase" class="bi bi-x-circle text-danger"></i> One Lowercase Letter<br>
                        <i id="num" class="bi bi-x-circle text-danger"></i> One Number
                    </div>
                </div>
                @Html.EditorFor(x => x.ConfirmPassword, new { htmlAttributes = new { @class = "form-control form-control-lg my-3", @placeholder = "Confirm Password", @id = "password2", @type = "password" } })
                @*<input  class="form-control form-control-lg my-3" name="password2" id="password2" placeholder="Confirm Password" autocomplete="off">*@
                <div>
                    <i id="pwmatch" class="bi bi-x-circle text-danger"></i> Passwords Match
                </div>
                <button type="submit" class="btn btn-primary btn-lg w-100 mt-3">Change Password</button>
            }
        </div>
    </div>
</div>
<script>
    document.querySelectorAll("input[type=password]").forEach(input => {
        input.addEventListener("keyup", function () {
            const ucase = /[A-Z]+/;
            const lcase = /[a-z]+/;
            const num = /[0-9]+/;

            const password1 = document.getElementById("password1").value;
            const password2 = document.getElementById("password2").value;

            document.getElementById("8char").className = password1.length >= 8 ? "bi bi-check-circle text-success" : "bi bi-x-circle text-danger";
            document.getElementById("ucase").className = ucase.test(password1) ? "bi bi-check-circle text-success" : "bi bi-x-circle text-danger";
            document.getElementById("lcase").className = lcase.test(password1) ? "bi bi-check-circle text-success" : "bi bi-x-circle text-danger";
            document.getElementById("num").className = num.test(password1) ? "bi bi-check-circle text-success" : "bi bi-x-circle text-danger";
            document.getElementById("pwmatch").className = password1 === password2 ? "bi bi-check-circle text-success" : "bi bi-x-circle text-danger";
        });
    });
</script>
